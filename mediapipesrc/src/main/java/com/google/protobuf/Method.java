// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/protobuf/api.proto

package com.google.protobuf;

/**
 * <pre>
 * Method represents a method of an API interface.
 * </pre>
 *
 * Protobuf type {@code google.protobuf.Method}
 */
public  final class Method extends
        GeneratedMessageLite<
                Method, Method.Builder> implements
        // @@protoc_insertion_point(message_implements:google.protobuf.Method)
        MethodOrBuilder {
    private Method() {
        name_ = "";
        requestTypeUrl_ = "";
        responseTypeUrl_ = "";
        options_ = emptyProtobufList();
    }
    public static final int NAME_FIELD_NUMBER = 1;
    private String name_;
    /**
     * <pre>
     * The simple name of this method.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The name.
     */
    @Override
    public String getName() {
        return name_;
    }
    /**
     * <pre>
     * The simple name of this method.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    @Override
    public ByteString
    getNameBytes() {
        return ByteString.copyFromUtf8(name_);
    }
    /**
     * <pre>
     * The simple name of this method.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @param value The name to set.
     */
    private void setName(
            String value) {
        Class<?> valueClass = value.getClass();

        name_ = value;
    }
    /**
     * <pre>
     * The simple name of this method.
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    private void clearName() {

        name_ = getDefaultInstance().getName();
    }
    /**
     * <pre>
     * The simple name of this method.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @param value The bytes for name to set.
     */
    private void setNameBytes(
            ByteString value) {
        checkByteStringIsUtf8(value);
        name_ = value.toStringUtf8();

    }

    public static final int REQUEST_TYPE_URL_FIELD_NUMBER = 2;
    private String requestTypeUrl_;
    /**
     * <pre>
     * A URL of the input message type.
     * </pre>
     *
     * <code>string request_type_url = 2;</code>
     * @return The requestTypeUrl.
     */
    @Override
    public String getRequestTypeUrl() {
        return requestTypeUrl_;
    }
    /**
     * <pre>
     * A URL of the input message type.
     * </pre>
     *
     * <code>string request_type_url = 2;</code>
     * @return The bytes for requestTypeUrl.
     */
    @Override
    public ByteString
    getRequestTypeUrlBytes() {
        return ByteString.copyFromUtf8(requestTypeUrl_);
    }
    /**
     * <pre>
     * A URL of the input message type.
     * </pre>
     *
     * <code>string request_type_url = 2;</code>
     * @param value The requestTypeUrl to set.
     */
    private void setRequestTypeUrl(
            String value) {
        Class<?> valueClass = value.getClass();

        requestTypeUrl_ = value;
    }
    /**
     * <pre>
     * A URL of the input message type.
     * </pre>
     *
     * <code>string request_type_url = 2;</code>
     */
    private void clearRequestTypeUrl() {

        requestTypeUrl_ = getDefaultInstance().getRequestTypeUrl();
    }
    /**
     * <pre>
     * A URL of the input message type.
     * </pre>
     *
     * <code>string request_type_url = 2;</code>
     * @param value The bytes for requestTypeUrl to set.
     */
    private void setRequestTypeUrlBytes(
            ByteString value) {
        checkByteStringIsUtf8(value);
        requestTypeUrl_ = value.toStringUtf8();

    }

    public static final int REQUEST_STREAMING_FIELD_NUMBER = 3;
    private boolean requestStreaming_;
    /**
     * <pre>
     * If true, the request is streamed.
     * </pre>
     *
     * <code>bool request_streaming = 3;</code>
     * @return The requestStreaming.
     */
    @Override
    public boolean getRequestStreaming() {
        return requestStreaming_;
    }
    /**
     * <pre>
     * If true, the request is streamed.
     * </pre>
     *
     * <code>bool request_streaming = 3;</code>
     * @param value The requestStreaming to set.
     */
    private void setRequestStreaming(boolean value) {

        requestStreaming_ = value;
    }
    /**
     * <pre>
     * If true, the request is streamed.
     * </pre>
     *
     * <code>bool request_streaming = 3;</code>
     */
    private void clearRequestStreaming() {

        requestStreaming_ = false;
    }

    public static final int RESPONSE_TYPE_URL_FIELD_NUMBER = 4;
    private String responseTypeUrl_;
    /**
     * <pre>
     * The URL of the output message type.
     * </pre>
     *
     * <code>string response_type_url = 4;</code>
     * @return The responseTypeUrl.
     */
    @Override
    public String getResponseTypeUrl() {
        return responseTypeUrl_;
    }
    /**
     * <pre>
     * The URL of the output message type.
     * </pre>
     *
     * <code>string response_type_url = 4;</code>
     * @return The bytes for responseTypeUrl.
     */
    @Override
    public ByteString
    getResponseTypeUrlBytes() {
        return ByteString.copyFromUtf8(responseTypeUrl_);
    }
    /**
     * <pre>
     * The URL of the output message type.
     * </pre>
     *
     * <code>string response_type_url = 4;</code>
     * @param value The responseTypeUrl to set.
     */
    private void setResponseTypeUrl(
            String value) {
        Class<?> valueClass = value.getClass();

        responseTypeUrl_ = value;
    }
    /**
     * <pre>
     * The URL of the output message type.
     * </pre>
     *
     * <code>string response_type_url = 4;</code>
     */
    private void clearResponseTypeUrl() {

        responseTypeUrl_ = getDefaultInstance().getResponseTypeUrl();
    }
    /**
     * <pre>
     * The URL of the output message type.
     * </pre>
     *
     * <code>string response_type_url = 4;</code>
     * @param value The bytes for responseTypeUrl to set.
     */
    private void setResponseTypeUrlBytes(
            ByteString value) {
        checkByteStringIsUtf8(value);
        responseTypeUrl_ = value.toStringUtf8();

    }

    public static final int RESPONSE_STREAMING_FIELD_NUMBER = 5;
    private boolean responseStreaming_;
    /**
     * <pre>
     * If true, the response is streamed.
     * </pre>
     *
     * <code>bool response_streaming = 5;</code>
     * @return The responseStreaming.
     */
    @Override
    public boolean getResponseStreaming() {
        return responseStreaming_;
    }
    /**
     * <pre>
     * If true, the response is streamed.
     * </pre>
     *
     * <code>bool response_streaming = 5;</code>
     * @param value The responseStreaming to set.
     */
    private void setResponseStreaming(boolean value) {

        responseStreaming_ = value;
    }
    /**
     * <pre>
     * If true, the response is streamed.
     * </pre>
     *
     * <code>bool response_streaming = 5;</code>
     */
    private void clearResponseStreaming() {

        responseStreaming_ = false;
    }

    public static final int OPTIONS_FIELD_NUMBER = 6;
    private Internal.ProtobufList<Option> options_;
    /**
     * <pre>
     * Any metadata attached to the method.
     * </pre>
     *
     * <code>repeated .google.protobuf.Option options = 6;</code>
     */
    @Override
    public java.util.List<Option> getOptionsList() {
        return options_;
    }
    /**
     * <pre>
     * Any metadata attached to the method.
     * </pre>
     *
     * <code>repeated .google.protobuf.Option options = 6;</code>
     */
    public java.util.List<? extends OptionOrBuilder>
    getOptionsOrBuilderList() {
        return options_;
    }
    /**
     * <pre>
     * Any metadata attached to the method.
     * </pre>
     *
     * <code>repeated .google.protobuf.Option options = 6;</code>
     */
    @Override
    public int getOptionsCount() {
        return options_.size();
    }
    /**
     * <pre>
     * Any metadata attached to the method.
     * </pre>
     *
     * <code>repeated .google.protobuf.Option options = 6;</code>
     */
    @Override
    public Option getOptions(int index) {
        return options_.get(index);
    }
    /**
     * <pre>
     * Any metadata attached to the method.
     * </pre>
     *
     * <code>repeated .google.protobuf.Option options = 6;</code>
     */
    public OptionOrBuilder getOptionsOrBuilder(
            int index) {
        return options_.get(index);
    }
    private void ensureOptionsIsMutable() {
        Internal.ProtobufList<Option> tmp = options_;
        if (!tmp.isModifiable()) {
            options_ =
                    GeneratedMessageLite.mutableCopy(tmp);
        }
    }

    /**
     * <pre>
     * Any metadata attached to the method.
     * </pre>
     *
     * <code>repeated .google.protobuf.Option options = 6;</code>
     */
    private void setOptions(
            int index, Option value) {
        value.getClass();
        ensureOptionsIsMutable();
        options_.set(index, value);
    }
    /**
     * <pre>
     * Any metadata attached to the method.
     * </pre>
     *
     * <code>repeated .google.protobuf.Option options = 6;</code>
     */
    private void addOptions(Option value) {
        value.getClass();
        ensureOptionsIsMutable();
        options_.add(value);
    }
    /**
     * <pre>
     * Any metadata attached to the method.
     * </pre>
     *
     * <code>repeated .google.protobuf.Option options = 6;</code>
     */
    private void addOptions(
            int index, Option value) {
        value.getClass();
        ensureOptionsIsMutable();
        options_.add(index, value);
    }
    /**
     * <pre>
     * Any metadata attached to the method.
     * </pre>
     *
     * <code>repeated .google.protobuf.Option options = 6;</code>
     */
    private void addAllOptions(
            Iterable<? extends Option> values) {
        ensureOptionsIsMutable();
        AbstractMessageLite.addAll(
                values, options_);
    }
    /**
     * <pre>
     * Any metadata attached to the method.
     * </pre>
     *
     * <code>repeated .google.protobuf.Option options = 6;</code>
     */
    private void clearOptions() {
        options_ = emptyProtobufList();
    }
    /**
     * <pre>
     * Any metadata attached to the method.
     * </pre>
     *
     * <code>repeated .google.protobuf.Option options = 6;</code>
     */
    private void removeOptions(int index) {
        ensureOptionsIsMutable();
        options_.remove(index);
    }

    public static final int SYNTAX_FIELD_NUMBER = 7;
    private int syntax_;
    /**
     * <pre>
     * The source syntax of this method.
     * </pre>
     *
     * <code>.google.protobuf.Syntax syntax = 7;</code>
     * @return The enum numeric value on the wire for syntax.
     */
    @Override
    public int getSyntaxValue() {
        return syntax_;
    }
    /**
     * <pre>
     * The source syntax of this method.
     * </pre>
     *
     * <code>.google.protobuf.Syntax syntax = 7;</code>
     * @return The syntax.
     */
    @Override
    public Syntax getSyntax() {
        Syntax result = Syntax.forNumber(syntax_);
        return result == null ? Syntax.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * The source syntax of this method.
     * </pre>
     *
     * <code>.google.protobuf.Syntax syntax = 7;</code>
     * @param value The enum numeric value on the wire for syntax to set.
     */
    private void setSyntaxValue(int value) {
        syntax_ = value;
    }
    /**
     * <pre>
     * The source syntax of this method.
     * </pre>
     *
     * <code>.google.protobuf.Syntax syntax = 7;</code>
     * @param value The syntax to set.
     */
    private void setSyntax(Syntax value) {
        syntax_ = value.getNumber();

    }
    /**
     * <pre>
     * The source syntax of this method.
     * </pre>
     *
     * <code>.google.protobuf.Syntax syntax = 7;</code>
     */
    private void clearSyntax() {

        syntax_ = 0;
    }

    public static Method parseFrom(
            java.nio.ByteBuffer data)
            throws InvalidProtocolBufferException {
        return GeneratedMessageLite.parseFrom(
                DEFAULT_INSTANCE, data);
    }
    public static Method parseFrom(
            java.nio.ByteBuffer data,
            ExtensionRegistryLite extensionRegistry)
            throws InvalidProtocolBufferException {
        return GeneratedMessageLite.parseFrom(
                DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static Method parseFrom(
            ByteString data)
            throws InvalidProtocolBufferException {
        return GeneratedMessageLite.parseFrom(
                DEFAULT_INSTANCE, data);
    }
    public static Method parseFrom(
            ByteString data,
            ExtensionRegistryLite extensionRegistry)
            throws InvalidProtocolBufferException {
        return GeneratedMessageLite.parseFrom(
                DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static Method parseFrom(byte[] data)
            throws InvalidProtocolBufferException {
        return GeneratedMessageLite.parseFrom(
                DEFAULT_INSTANCE, data);
    }
    public static Method parseFrom(
            byte[] data,
            ExtensionRegistryLite extensionRegistry)
            throws InvalidProtocolBufferException {
        return GeneratedMessageLite.parseFrom(
                DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static Method parseFrom(java.io.InputStream input)
            throws java.io.IOException {
        return GeneratedMessageLite.parseFrom(
                DEFAULT_INSTANCE, input);
    }
    public static Method parseFrom(
            java.io.InputStream input,
            ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
        return GeneratedMessageLite.parseFrom(
                DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static Method parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static Method parseDelimitedFrom(
            java.io.InputStream input,
            ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static Method parseFrom(
            CodedInputStream input)
            throws java.io.IOException {
        return GeneratedMessageLite.parseFrom(
                DEFAULT_INSTANCE, input);
    }
    public static Method parseFrom(
            CodedInputStream input,
            ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
        return GeneratedMessageLite.parseFrom(
                DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
        return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(Method prototype) {
        return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Method represents a method of an API interface.
     * </pre>
     *
     * Protobuf type {@code google.protobuf.Method}
     */
    public static final class Builder extends
            GeneratedMessageLite.Builder<
                    Method, Builder> implements
            // @@protoc_insertion_point(builder_implements:google.protobuf.Method)
            MethodOrBuilder {
        // Construct using com.google.protobuf.Method.newBuilder()
        private Builder() {
            super(DEFAULT_INSTANCE);
        }


        /**
         * <pre>
         * The simple name of this method.
         * </pre>
         *
         * <code>string name = 1;</code>
         * @return The name.
         */
        @Override
        public String getName() {
            return instance.getName();
        }
        /**
         * <pre>
         * The simple name of this method.
         * </pre>
         *
         * <code>string name = 1;</code>
         * @return The bytes for name.
         */
        @Override
        public ByteString
        getNameBytes() {
            return instance.getNameBytes();
        }
        /**
         * <pre>
         * The simple name of this method.
         * </pre>
         *
         * <code>string name = 1;</code>
         * @param value The name to set.
         * @return This builder for chaining.
         */
        public Builder setName(
                String value) {
            copyOnWrite();
            instance.setName(value);
            return this;
        }
        /**
         * <pre>
         * The simple name of this method.
         * </pre>
         *
         * <code>string name = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearName() {
            copyOnWrite();
            instance.clearName();
            return this;
        }
        /**
         * <pre>
         * The simple name of this method.
         * </pre>
         *
         * <code>string name = 1;</code>
         * @param value The bytes for name to set.
         * @return This builder for chaining.
         */
        public Builder setNameBytes(
                ByteString value) {
            copyOnWrite();
            instance.setNameBytes(value);
            return this;
        }

        /**
         * <pre>
         * A URL of the input message type.
         * </pre>
         *
         * <code>string request_type_url = 2;</code>
         * @return The requestTypeUrl.
         */
        @Override
        public String getRequestTypeUrl() {
            return instance.getRequestTypeUrl();
        }
        /**
         * <pre>
         * A URL of the input message type.
         * </pre>
         *
         * <code>string request_type_url = 2;</code>
         * @return The bytes for requestTypeUrl.
         */
        @Override
        public ByteString
        getRequestTypeUrlBytes() {
            return instance.getRequestTypeUrlBytes();
        }
        /**
         * <pre>
         * A URL of the input message type.
         * </pre>
         *
         * <code>string request_type_url = 2;</code>
         * @param value The requestTypeUrl to set.
         * @return This builder for chaining.
         */
        public Builder setRequestTypeUrl(
                String value) {
            copyOnWrite();
            instance.setRequestTypeUrl(value);
            return this;
        }
        /**
         * <pre>
         * A URL of the input message type.
         * </pre>
         *
         * <code>string request_type_url = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearRequestTypeUrl() {
            copyOnWrite();
            instance.clearRequestTypeUrl();
            return this;
        }
        /**
         * <pre>
         * A URL of the input message type.
         * </pre>
         *
         * <code>string request_type_url = 2;</code>
         * @param value The bytes for requestTypeUrl to set.
         * @return This builder for chaining.
         */
        public Builder setRequestTypeUrlBytes(
                ByteString value) {
            copyOnWrite();
            instance.setRequestTypeUrlBytes(value);
            return this;
        }

        /**
         * <pre>
         * If true, the request is streamed.
         * </pre>
         *
         * <code>bool request_streaming = 3;</code>
         * @return The requestStreaming.
         */
        @Override
        public boolean getRequestStreaming() {
            return instance.getRequestStreaming();
        }
        /**
         * <pre>
         * If true, the request is streamed.
         * </pre>
         *
         * <code>bool request_streaming = 3;</code>
         * @param value The requestStreaming to set.
         * @return This builder for chaining.
         */
        public Builder setRequestStreaming(boolean value) {
            copyOnWrite();
            instance.setRequestStreaming(value);
            return this;
        }
        /**
         * <pre>
         * If true, the request is streamed.
         * </pre>
         *
         * <code>bool request_streaming = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearRequestStreaming() {
            copyOnWrite();
            instance.clearRequestStreaming();
            return this;
        }

        /**
         * <pre>
         * The URL of the output message type.
         * </pre>
         *
         * <code>string response_type_url = 4;</code>
         * @return The responseTypeUrl.
         */
        @Override
        public String getResponseTypeUrl() {
            return instance.getResponseTypeUrl();
        }
        /**
         * <pre>
         * The URL of the output message type.
         * </pre>
         *
         * <code>string response_type_url = 4;</code>
         * @return The bytes for responseTypeUrl.
         */
        @Override
        public ByteString
        getResponseTypeUrlBytes() {
            return instance.getResponseTypeUrlBytes();
        }
        /**
         * <pre>
         * The URL of the output message type.
         * </pre>
         *
         * <code>string response_type_url = 4;</code>
         * @param value The responseTypeUrl to set.
         * @return This builder for chaining.
         */
        public Builder setResponseTypeUrl(
                String value) {
            copyOnWrite();
            instance.setResponseTypeUrl(value);
            return this;
        }
        /**
         * <pre>
         * The URL of the output message type.
         * </pre>
         *
         * <code>string response_type_url = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearResponseTypeUrl() {
            copyOnWrite();
            instance.clearResponseTypeUrl();
            return this;
        }
        /**
         * <pre>
         * The URL of the output message type.
         * </pre>
         *
         * <code>string response_type_url = 4;</code>
         * @param value The bytes for responseTypeUrl to set.
         * @return This builder for chaining.
         */
        public Builder setResponseTypeUrlBytes(
                ByteString value) {
            copyOnWrite();
            instance.setResponseTypeUrlBytes(value);
            return this;
        }

        /**
         * <pre>
         * If true, the response is streamed.
         * </pre>
         *
         * <code>bool response_streaming = 5;</code>
         * @return The responseStreaming.
         */
        @Override
        public boolean getResponseStreaming() {
            return instance.getResponseStreaming();
        }
        /**
         * <pre>
         * If true, the response is streamed.
         * </pre>
         *
         * <code>bool response_streaming = 5;</code>
         * @param value The responseStreaming to set.
         * @return This builder for chaining.
         */
        public Builder setResponseStreaming(boolean value) {
            copyOnWrite();
            instance.setResponseStreaming(value);
            return this;
        }
        /**
         * <pre>
         * If true, the response is streamed.
         * </pre>
         *
         * <code>bool response_streaming = 5;</code>
         * @return This builder for chaining.
         */
        public Builder clearResponseStreaming() {
            copyOnWrite();
            instance.clearResponseStreaming();
            return this;
        }

        /**
         * <pre>
         * Any metadata attached to the method.
         * </pre>
         *
         * <code>repeated .google.protobuf.Option options = 6;</code>
         */
        @Override
        public java.util.List<Option> getOptionsList() {
            return java.util.Collections.unmodifiableList(
                    instance.getOptionsList());
        }
        /**
         * <pre>
         * Any metadata attached to the method.
         * </pre>
         *
         * <code>repeated .google.protobuf.Option options = 6;</code>
         */
        @Override
        public int getOptionsCount() {
            return instance.getOptionsCount();
        }/**
         * <pre>
         * Any metadata attached to the method.
         * </pre>
         *
         * <code>repeated .google.protobuf.Option options = 6;</code>
         */
        @Override
        public Option getOptions(int index) {
            return instance.getOptions(index);
        }
        /**
         * <pre>
         * Any metadata attached to the method.
         * </pre>
         *
         * <code>repeated .google.protobuf.Option options = 6;</code>
         */
        public Builder setOptions(
                int index, Option value) {
            copyOnWrite();
            instance.setOptions(index, value);
            return this;
        }
        /**
         * <pre>
         * Any metadata attached to the method.
         * </pre>
         *
         * <code>repeated .google.protobuf.Option options = 6;</code>
         */
        public Builder setOptions(
                int index, Option.Builder builderForValue) {
            copyOnWrite();
            instance.setOptions(index,
                    builderForValue.build());
            return this;
        }
        /**
         * <pre>
         * Any metadata attached to the method.
         * </pre>
         *
         * <code>repeated .google.protobuf.Option options = 6;</code>
         */
        public Builder addOptions(Option value) {
            copyOnWrite();
            instance.addOptions(value);
            return this;
        }
        /**
         * <pre>
         * Any metadata attached to the method.
         * </pre>
         *
         * <code>repeated .google.protobuf.Option options = 6;</code>
         */
        public Builder addOptions(
                int index, Option value) {
            copyOnWrite();
            instance.addOptions(index, value);
            return this;
        }
        /**
         * <pre>
         * Any metadata attached to the method.
         * </pre>
         *
         * <code>repeated .google.protobuf.Option options = 6;</code>
         */
        public Builder addOptions(
                Option.Builder builderForValue) {
            copyOnWrite();
            instance.addOptions(builderForValue.build());
            return this;
        }
        /**
         * <pre>
         * Any metadata attached to the method.
         * </pre>
         *
         * <code>repeated .google.protobuf.Option options = 6;</code>
         */
        public Builder addOptions(
                int index, Option.Builder builderForValue) {
            copyOnWrite();
            instance.addOptions(index,
                    builderForValue.build());
            return this;
        }
        /**
         * <pre>
         * Any metadata attached to the method.
         * </pre>
         *
         * <code>repeated .google.protobuf.Option options = 6;</code>
         */
        public Builder addAllOptions(
                Iterable<? extends Option> values) {
            copyOnWrite();
            instance.addAllOptions(values);
            return this;
        }
        /**
         * <pre>
         * Any metadata attached to the method.
         * </pre>
         *
         * <code>repeated .google.protobuf.Option options = 6;</code>
         */
        public Builder clearOptions() {
            copyOnWrite();
            instance.clearOptions();
            return this;
        }
        /**
         * <pre>
         * Any metadata attached to the method.
         * </pre>
         *
         * <code>repeated .google.protobuf.Option options = 6;</code>
         */
        public Builder removeOptions(int index) {
            copyOnWrite();
            instance.removeOptions(index);
            return this;
        }

        /**
         * <pre>
         * The source syntax of this method.
         * </pre>
         *
         * <code>.google.protobuf.Syntax syntax = 7;</code>
         * @return The enum numeric value on the wire for syntax.
         */
        @Override
        public int getSyntaxValue() {
            return instance.getSyntaxValue();
        }
        /**
         * <pre>
         * The source syntax of this method.
         * </pre>
         *
         * <code>.google.protobuf.Syntax syntax = 7;</code>
         * @param value The syntax to set.
         * @return This builder for chaining.
         */
        public Builder setSyntaxValue(int value) {
            copyOnWrite();
            instance.setSyntaxValue(value);
            return this;
        }
        /**
         * <pre>
         * The source syntax of this method.
         * </pre>
         *
         * <code>.google.protobuf.Syntax syntax = 7;</code>
         * @return The syntax.
         */
        @Override
        public Syntax getSyntax() {
            return instance.getSyntax();
        }
        /**
         * <pre>
         * The source syntax of this method.
         * </pre>
         *
         * <code>.google.protobuf.Syntax syntax = 7;</code>
         * @param value The enum numeric value on the wire for syntax to set.
         * @return This builder for chaining.
         */
        public Builder setSyntax(Syntax value) {
            copyOnWrite();
            instance.setSyntax(value);
            return this;
        }
        /**
         * <pre>
         * The source syntax of this method.
         * </pre>
         *
         * <code>.google.protobuf.Syntax syntax = 7;</code>
         * @return This builder for chaining.
         */
        public Builder clearSyntax() {
            copyOnWrite();
            instance.clearSyntax();
            return this;
        }

        // @@protoc_insertion_point(builder_scope:google.protobuf.Method)
    }
    @Override
    @SuppressWarnings({"unchecked", "fallthrough"})
    protected final Object dynamicMethod(
            MethodToInvoke method,
            Object arg0, Object arg1) {
        switch (method) {
            case NEW_MUTABLE_INSTANCE: {
                return new Method();
            }
            case NEW_BUILDER: {
                return new Builder();
            }
            case BUILD_MESSAGE_INFO: {
                Object[] objects = new Object[] {
                        "name_",
                        "requestTypeUrl_",
                        "requestStreaming_",
                        "responseTypeUrl_",
                        "responseStreaming_",
                        "options_",
                        Option.class,
                        "syntax_",
                };
                String info =
                        "\u0000\u0007\u0000\u0000\u0001\u0007\u0007\u0000\u0001\u0000\u0001\u0208\u0002\u0208" +
                                "\u0003\u0007\u0004\u0208\u0005\u0007\u0006\u001b\u0007\f";
                return newMessageInfo(DEFAULT_INSTANCE, info, objects);
            }
            // fall through
            case GET_DEFAULT_INSTANCE: {
                return DEFAULT_INSTANCE;
            }
            case GET_PARSER: {
                Parser<Method> parser = PARSER;
                if (parser == null) {
                    synchronized (Method.class) {
                        parser = PARSER;
                        if (parser == null) {
                            parser =
                                    new DefaultInstanceBasedParser<Method>(
                                            DEFAULT_INSTANCE);
                            PARSER = parser;
                        }
                    }
                }
                return parser;
            }
            case GET_MEMOIZED_IS_INITIALIZED: {
                return (byte) 1;
            }
            case SET_MEMOIZED_IS_INITIALIZED: {
                return null;
            }
        }
        throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.protobuf.Method)
    private static final Method DEFAULT_INSTANCE;
    static {
        Method defaultInstance = new Method();
        // New instances are implicitly immutable so no need to make
        // immutable.
        DEFAULT_INSTANCE = defaultInstance;
        GeneratedMessageLite.registerDefaultInstance(
                Method.class, defaultInstance);
    }

    public static Method getDefaultInstance() {
        return DEFAULT_INSTANCE;
    }

    private static volatile Parser<Method> PARSER;

    public static Parser<Method> parser() {
        return DEFAULT_INSTANCE.getParserForType();
    }
}

